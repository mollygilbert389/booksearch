{"ast":null,"code":"import _defineProperty from \"/Users/mollygilbert/codeWork/homework/booksearch/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mollygilbert/codeWork/homework/booksearch/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollygilbert/codeWork/homework/booksearch/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollygilbert/codeWork/homework/booksearch/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollygilbert/codeWork/homework/booksearch/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollygilbert/codeWork/homework/booksearch/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollygilbert/codeWork/homework/booksearch/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Updated from \"../components/Updated\";\nimport Radium from 'radium';\n\nrequire('dotenv').config();\n\nvar header = {\n  fontSize: '25px',\n  color: 'white',\n  marginTop: '-20px'\n};\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      query: \"\",\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      booksSearched: []\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (event) {\n      event.preventDefault();\n      var bookid = event.target.getAttribute(\"dataid\");\n      API.deleteBook(bookid).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSave = function (event) {\n      event.preventDefault();\n\n      if (event.target.parentNode.querySelector('.title').textContent) {\n        API.saveBook({\n          bookid: event.target.parentNode.querySelector(\"img\").id,\n          title: event.target.parentNode.querySelector('.title').textContent,\n          author: event.target.parentNode.querySelector('.author').textContent,\n          description: event.target.parentNode.querySelector('.descript').textContent,\n          link: event.target.parentNode.querySelector('.link').href,\n          image: event.target.parentNode.querySelector('img').src\n        }).then(function (res) {\n          _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.findBooks(_this.state.query).then(function (results) {\n        var filteredBooks = results.data.items.map(function (book) {\n          var id = book.id;\n          var title = book.volumeInfo.title;\n          var author = book.volumeInfo.authors[0];\n          var description = book.volumeInfo.description;\n          var link = book.volumeInfo.previewLink;\n          var image = \"\";\n\n          if (book.volumeInfo.imageLinks && typeof book.volumeInfo.imageLinks.thumbnail !== \"undefined\") {\n            image = book.volumeInfo.imageLinks.thumbnail;\n          } else {\n            image = \"https://cidco-smartcity.niua.org/wp-content/uploads/2017/08/No-image-found.jpg\";\n          }\n\n          return {\n            id: id,\n            title: title,\n            author: author,\n            description: description,\n            link: link,\n            image: image\n          };\n        });\n\n        _this.setState({\n          booksSearched: filteredBooks\n        });\n      });\n    };\n\n    _this.getBooks = function () {};\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Search for books below!\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.query,\n        onChange: this.handleInputChange,\n        name: \"query\",\n        placeholder: \"Book Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.query,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Submit Book\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), this.state.booksSearched.map(function (book) {\n        return React.createElement(Book, {\n          id: book.id,\n          image: book.image,\n          title: book.title,\n          author: book.author,\n          description: book.description,\n          link: book.link,\n          key: book.id,\n          saveBook: _this2.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      })), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Saved Books\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(Updated, {\n          id: book._id,\n          image: book.image,\n          title: book.title,\n          author: book.author,\n          description: book.description,\n          link: book.link,\n          key: book._id,\n          deleteBook: _this2.deleteBook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Radium(Books);","map":{"version":3,"sources":["/Users/mollygilbert/codeWork/homework/booksearch/client/src/pages/Books.js"],"names":["React","Component","Button","Jumbotron","API","Link","Col","Row","Container","List","Input","FormBtn","Book","Updated","Radium","require","config","header","fontSize","color","marginTop","Books","state","books","query","title","author","description","booksSearched","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","event","preventDefault","bookid","target","getAttribute","handleInputChange","name","value","handleSave","parentNode","querySelector","textContent","saveBook","id","link","href","image","src","handleFormSubmit","findBooks","results","filteredBooks","items","map","book","volumeInfo","authors","previewLink","imageLinks","thumbnail","length","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Updated from \"../components/Updated\";\nimport Radium from 'radium';\n\nrequire('dotenv').config();\n\nconst header = {\n  fontSize: '25px',\n  color: 'white',\n  marginTop: '-20px',\n \n}\n\nclass Books extends Component {\n \n  state = {\n    books: [],\n    query: \"\",\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    booksSearched: []\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = event => {\n    event.preventDefault();\n    let bookid = event.target.getAttribute(\"dataid\");\n    API.deleteBook(bookid)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSave = event => {\n    event.preventDefault();\n    if (event.target.parentNode.querySelector('.title').textContent) {\n      API.saveBook({\n        bookid: event.target.parentNode.querySelector(\"img\").id,\n        title: event.target.parentNode.querySelector('.title').textContent,\n        author: event.target.parentNode.querySelector('.author').textContent,\n        description: event.target.parentNode.querySelector('.descript').textContent,\n        link: event.target.parentNode.querySelector('.link').href,\n        image: event.target.parentNode.querySelector('img').src\n      })\n        .then(res => {\n          this.loadBooks()})\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.findBooks(this.state.query).then(results => {\n      let filteredBooks = results.data.items.map(book =>{\n        let id = book.id;\n        let title=book.volumeInfo.title;\n        let author=book.volumeInfo.authors[0];\n        let description=book.volumeInfo.description;\n        let link=book.volumeInfo.previewLink; \n        let image = \"\";       \n        if (book.volumeInfo.imageLinks && typeof(book.volumeInfo.imageLinks.thumbnail) !== \"undefined\"  ) {\n          image = book.volumeInfo.imageLinks.thumbnail;\n        } else {\n          image = \"https://cidco-smartcity.niua.org/wp-content/uploads/2017/08/No-image-found.jpg\";\n        }\n        return {\n          id ,title, author, description, link, image\n        }\n      })\n\n      this.setState({booksSearched: filteredBooks});\n      });\n    };\n\n  getBooks = () => {\n\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1 style={header}>Search for books below!</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.query}\n                onChange={this.handleInputChange}\n                name=\"query\"\n                placeholder=\"Book Title\"\n              />\n              <FormBtn\n                disabled={!this.state.query}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n            <br />\n            <br />\n            <hr />\n            {this.state.booksSearched.map(book => (\n              \n          <Book\n            id={book.id}\n            image={book.image}\n            title={book.title}\n            author={book.author}\n            description={book.description}\n            link={book.link}\n            key={book.id}  \n            saveBook={this.handleSave}>\n            <Button />\n          </Book>\n        ))}\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1 style={header}>Saved Books</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <Updated\n                  id={book._id}\n                  image={book.image}\n                  title={book.title}\n                  author={book.author}\n                  description={book.description}\n                  link={book.link}\n                  key={book._id}\n                  deleteBook={this.deleteBook}\n                />\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Radium(Books);"]},"metadata":{},"sourceType":"module"}